buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT"
    }
}
// *** Load ForgeGradle
apply plugin: "forge"

// *** Configure
version = "${minecraft_version}-${mod_version}-UNOFFICIAL"
group            = "net.lepko.easycrafting"
archivesBaseName = "EasyCrafting"

minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = "run"
}
repositories {
    maven {
        name "ChickenBones"
        url "http://chickenbones.net/maven/"
    }
    maven {
        name = "Player"
        url = "http://maven.ic2.player.to/"
    }
}

dependencies {
    compile "codechicken:NotEnoughItems:${minecraft_version}-${nei_version}:dev"
    compile "codechicken:CodeChickenLib:${minecraft_version}-${code_chicken_lib_version}:dev"
    compile "codechicken:CodeChickenCore:${minecraft_version}-${code_chicken_core_version}:dev"
    compile "net.industrial-craft:industrialcraft-2:${ic2_version}-experimental:api"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version",   project.version
    inputs.property "mcversion", project.minecraft.version

    // expand variables
    from(sourceSets.main.resources.srcDirs) {
        include "**/*.properties"
        include "**/*.info"

        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else
    from(sourceSets.main.resources.srcDirs) {
		exclude "**/*.properties"
        exclude "**/*.info"
    }
}

// *** Additional Jars
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = "src"
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = "dev"
}

artifacts {
    archives sourceJar, devJar
}
